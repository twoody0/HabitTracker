// <auto-generated />
using System;
using HabitTracker.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HabitTracker.Core.Migrations
{
    [DbContext(typeof(HabitTrackerDbContext))]
    partial class HabitTrackerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("HabitTracker.Core.Entities.Habit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Frequency")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FrequencyUnit")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Habits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = 2,
                            CreatedDate = new DateTime(2024, 12, 15, 0, 21, 15, 671, DateTimeKind.Utc).AddTicks(2189),
                            Frequency = 1,
                            FrequencyUnit = 0,
                            ModifiedDate = new DateTime(2024, 12, 15, 0, 21, 15, 671, DateTimeKind.Utc).AddTicks(2191),
                            Name = "Daily Exercise",
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tags = "exercise,fitness,health"
                        },
                        new
                        {
                            Id = 2,
                            Category = 2,
                            CreatedDate = new DateTime(2024, 12, 15, 0, 21, 15, 671, DateTimeKind.Utc).AddTicks(2213),
                            Frequency = 1,
                            FrequencyUnit = 1,
                            ModifiedDate = new DateTime(2024, 12, 15, 0, 21, 15, 671, DateTimeKind.Utc).AddTicks(2213),
                            Name = "Read Books",
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tags = "reading,learning"
                        });
                });

            modelBuilder.Entity("HabitTracker.Core.ProgressLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("HabitId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HabitId");

                    b.ToTable("ProgressLogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 12, 15, 0, 21, 15, 671, DateTimeKind.Utc).AddTicks(7389),
                            Date = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HabitId = 1,
                            IsCompleted = true,
                            ModifiedDate = new DateTime(2024, 12, 15, 0, 21, 15, 671, DateTimeKind.Utc).AddTicks(7390),
                            Note = "Ran 3 miles"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 12, 15, 0, 21, 15, 671, DateTimeKind.Utc).AddTicks(7394),
                            Date = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HabitId = 2,
                            IsCompleted = true,
                            ModifiedDate = new DateTime(2024, 12, 15, 0, 21, 15, 671, DateTimeKind.Utc).AddTicks(7394),
                            Note = "Finished 2 chapters"
                        });
                });

            modelBuilder.Entity("HabitTracker.Core.ProgressLog", b =>
                {
                    b.HasOne("HabitTracker.Core.Entities.Habit", null)
                        .WithMany("ProgressLogs")
                        .HasForeignKey("HabitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HabitTracker.Core.Entities.Habit", b =>
                {
                    b.Navigation("ProgressLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
